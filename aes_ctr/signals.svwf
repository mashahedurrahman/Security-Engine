
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.clk}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.rst}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.encNotDec}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.nonce[63:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.counterIn[63:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.key[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.messageIn[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.cipherIn[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.messageOut[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.cipherOut[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.counter[63:0]}]}
	} ]]
waveform format $id -radix %d
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.messageOutReg[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.cipherOutReg[127:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.done_message}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {aes_CTR_mode_tb.uut.done_cipher}]}
	} ]]

waveform xview limits 827000ps 1083000ps
